name: Deploy to AWS Lambda

on:
  workflow_dispatch: # Запуск тільки вручну з GitHub

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Zip package
        run: zip -r lambda.zip .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      # --------
      - name: Create Lambda if not exists
        run: |
          aws lambda get-function --function-name getUsers || \
          aws lambda create-function \
            --function-name getUsers \
            --runtime nodejs18.x \
            --role arn:aws:iam::211125775962:role/lambda-execution-role \
            --handler index.handler \
            --zip-file fileb://lambda.zip

      #+++++++++++++

      - name: Deploy to Lambda
        uses: appleboy/lambda-action@master
        with:
          function_name: getUsers
          zip_file: lambda.zip
          runtime: nodejs18.x
          handler: index.handler
          role: ${{ secrets.AWS_ROLE }}
          aws_region: ${{ secrets.AWS_REGION }}
          #-------------

          env: MYSQL_URI=${{ secrets.MYSQL_URI }}
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASS=${{ secrets.DB_PASS }}
            DB_NAME=${{ secrets.DB_NAME }}

          # variables: MYSQL_URI=${{ secrets.MYSQL_URI }}

          # environment:
          # variables: SECRET_STRING= '{{resolve:secretsmanager:my/secret:SecretString:secretkey}}'
#           environment {
#     variables = {
#       KEY1 = "VALUE1"
#       KEY2 = "VALUE2"
#     }
# }

# environment: |
#   MYSQL_URI=${{ secrets.MYSQL_URI }}
#   DB_HOST=${{ secrets.DB_HOST }}
#   DB_PORT=${{ secrets.DB_PORT }}
#   DB_USER=${{ secrets.DB_USER }}
#   DB_PASS=${{ secrets.DB_PASS }}
#   DB_NAME=${{ secrets.DB_NAME }}

# env: |
#   {
#     "MYSQL_URI": "${{ secrets.MYSQL_URI }}",
#     "DB_HOST": "${{ secrets.DB_HOST }}",
#     "DB_PORT": "${{ secrets.DB_PORT }}",
#     "DB_USER": "${{ secrets.DB_USER }}",
#     "DB_PASS": "${{ secrets.DB_PASS }}",
#     "DB_NAME": "${{ secrets.DB_NAME }}"
#   }

# - name: Deploy to Lambda
#   uses: appleboy/lambda-action@master
#   with:
#     function_name: getUsers
#     zip_file: lambda.zip
#     runtime: nodejs18.x
#     handler: index.handler
#     role: ${{ secrets.AWS_ROLE }}
#     aws_region: ${{ secrets.AWS_REGION }}
#     environment: |
#       MYSQL_URI=${{ secrets.MYSQL_URI }}
#       DB_HOST=${{ secrets.DB_HOST }}
#       DB_PORT=${{ secrets.DB_PORT }}
#       DB_USER=${{ secrets.DB_USER }}
#       DB_PASS=${{ secrets.DB_PASS }}
#       DB_NAME=${{ secrets.DB_NAME }}
